# -*- mode: python -*-
# Copyright (C) 2015  Niklas Rosenstein
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import craftr
from craftr.ext.compiler import _BaseCompiler, gen_output


class Ar(_BaseCompiler):
  ''' Interface for the Unix `ar` archiver. '''

  name = 'Unix AR'

  def __init__(self, program='ar', **kwargs):
    super().__init__(program=program, **kwargs)

  def staticlib(self, output, inputs, target_name=None, frameworks=(), **kwargs):
    join = self._settings(frameworks, kwargs)
    target = craftr.Target.Builder('unix.ar', name=target_name)

    inputs = craftr.expand_inputs(inputs, join)
    output = gen_output(output, suffix=craftr.platform.lib)
    command = [join['program'], 'rcs', '$out', '$in']

    self._warn_unused(join, kwargs, target.fullname)
    return target(command, inputs, [output])
