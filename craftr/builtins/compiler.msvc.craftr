# Copyright (C) 2015 Niklas Rosenstein
# All rights reserved.
#
# craftr_module(compiler.msvc)

name = 'MSVC'
c = 'cl'
cxx = 'cl'
compile_only = '/c'
w_all = '/Wall'
obj_out = '/Fo'
bin_out = '/Fe'

def std(name):
  return None

detected = False
version = None
target = None

def detect():
  import re
  from craftr.utils.shell import Process

  if detected:
    return

  try:
    p = Process([c, '/?'])
  except (Process.ExitCodeError, OSError) as exc:
    error('MSVC Compiler could not be detected. ({0})'.format(exc))

  m = re.search('compiler\s+version\s*([\d\.]+)\s*for\s*(\w+)', p.stderr, re.I)
  if not m:
    error('MSVC Compiler could not be detected. (unexpected output)')

  self.version = m.group(1)
  self.target = m.group(2)
  self.detected = True
