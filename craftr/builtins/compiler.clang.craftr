# Copyright (C) 2015 Niklas Rosenstein
# All rights reserved.
#
# craftr_module(compiler.clang)

name = 'Clang'
c = 'clang'
cxx = 'clang++'
compile_only = '-c'
w_all = '-Wall'
obj_out = '-o'
bin_out = '-o'

def std(name):
  return '-std=' + name

def detect():
  import re
  from craftr.utils.shell import Process

  if detected:
    return

  try:
    p = Process([bin or c, '--version'])
  except (Process.ExitCodeError, OSError) as exc:
    mod.error('Clang could not be detected on your system. ({0})'.format(exc))

  mv = re.search('version ([\d\.]+)', p.stdout)
  mt = re.search('Target: (\w+)', p.stdout)
  if not mv:
    mod.error('Clang version could not be detected.')
  if not mt:
    mod.error('Clang target architecture could not be detected')

  self.version = mv.group(1)
  self.target = mt.group(1)
  self.detected = True
