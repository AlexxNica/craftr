# craftr_module(compiler)
#
# Copyright (C) 2015 Niklas Rosenstein
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

P = load_module('platform')

if P.name == 'Darwin':
  _super = load_module('compiler.clang')
elif P.name == 'Linux':
  _super = load_module('compiler.gcc')
elif P.name == 'Windows':
  _super = load_module('compiler.msvc')
  module.extends('compiler.msvc')
elif P.name == 'Cygwin':
  _super = load_module('compiler.gcc')
else:
  error("compiler can't be deduced for '{0}'".format(P.name))

Archiver = _super.Archiver
CCompiler = _super.CCompiler
CxxCompiler = _super.CxxCompiler
