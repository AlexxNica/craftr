# Copyright (C) 2015 Niklas Rosenstein
# All rights reserved.

from craftr.utils.shell import quote
from craftr.vendor import ninja_syntax
import craftr
import re

default_outfile = 'build.ninja'


def export(fp, session, default_targets):
  writer = ninja_syntax.Writer(fp, width=4096)
  writer.comment('automatically generated by Craftr v' + craftr.__version__)
  writer.newline()

  for module in sorted(session.modules.values(), key=lambda x: x.identifier):
    if not module.targets:
      continue

    for target in sorted(module.targets.values(), key=lambda x: x.identifier):
      writer.comment('Module ' + module.identifier)
      writer.comment('Target ' + target.name)
      writer.newline()

      if len(target.commands) != 1:
        session.error('Ninja export currently supports only one command')

      rule = ident(target.identifier)
      command = ' '.join(quote(x) for x in target.commands[0])
      command = command.replace(craftr.IN, '$in')
      command = command.replace(craftr.OUT, '$out')
      writer.rule(rule, command)
      writer.newline()

      if target.foreach:
        if len(target.inputs) != len(target.outputs):
          session.error("target '{}': number of input files must match "
            "the number of output files".format(target.identifier))
        for infile, outfile in zip(target.inputs, target.outputs):
          writer.build([outfile], rule, [infile])
      elif target.inputs:
        writer.build(target.outputs, rule, target.inputs)

      writer.newline()
      writer.build(rule, 'phony',  target.outputs)
      writer.newline()


def ident(name):
  ''' Generates a valid ninja identifier from a Craftr target
  identifier. '''

  return re.sub('[^A-Za-z0-9_\.]+', '_', name)
